== About ==
This package implements linear model and generalized linear model fitters
that behave somewhat in the spirit of R's lm.fit() and glm.fit() routines.
The implementations here are new and not based on the implementations in R,
except that we allow Ross Ihaka's "limited pivoting" strategy as an option
in the fit of linear models in the (possibly) rank degenerate case.  We
also have a much faster (2x+) fitter available if the user wishes to 
assume that the model is of full column rank.


The linmod package is implemented entirely in modern Fortran, but a C 
interface is provided with the shared library.  Additionally, R bindings 
are provided.  At the moment, there is some very meager OpenMP usage, which 
I hope to expand over time.


The LM implementations are pretty standard, and due almost entirely to
the LAPACK authors; in short, they use a QR factorization of the input
data x, which requires the solution to the (triangular) system of equations:

    Rb = Q'y

See pretty much any book on numerical linear algebra for details, though
I recommend:

    Golub G. H. and Van Loan, C. F. "Matrix Computations", 3rd ed.

The GLM implementation uses iteratively reweighted least squares (irls), 
based on the descriptions available in the book: 

    McCallagh, P. and Nelder, J. "Generalized Linear Models", 2nd ed.


Outputs of the available routines are designed to mimic those of R's 
lm.fit() and glm.fit(), and as such should be fully compatible with R.  
Additionally, R's outputs were used extensively to test the validity of
the new implementations, which was absolutely invaluable.  And while I
have not studied the implementation details of R's methods, I suspect
that is where the similarities end.  R's implementations use a great deal 
of R code (specifically in fitting GLM's), and so I would expect this 
package to manage memory much better.  Also, R uses LINPACK routines for
their linear model fitter; this package uses LAPACK routines (modified
dgels et. al).  As such, I would suspect that its performance gains would
be greater than R's when linking with a high performance LAPACK library 
such as MKL or ACML; but I have not tested this at this time.


Early benchmarking shows a ~15% performance gain over R's lm.fit() at
modestly sized problems when using the method with partial pivoting, 
and a 200% performance gain when assuming the model is of full column
rank.

Matrices in this library are assumed to be column-major. Use the transpose
function to convert between the two storage formats as needed.


== License ==
Currently, the project is licensed and distributed under the Mozilla Public
License 2.0 (MPL).  See the LICENSE file for details.


== Requirements ==
* A Fortran 2003 compatible compiler
* A C99 compatible compiler
* cmake
* R and the SEXPtools package (if installing the R package)

Both the R package and the standalone library require cmake, because if you
so much as think the word "autotools" around me, I'll punch you in the 
stomach.



== Installation Instructions == 
For the R package, simply execute
R CMD INSTALL glm_0.1-0.tar.gz

For the library install, go to
glm/src/glm/
and enter 'make'.  A static and dynamic library will be placed in the
glm/src/glm/build
tree.



== Build Info ==
I have rigorously tested this package with the following software/versions:

gfortran: 4.8.1
clang: 3.2-7
cmake: 2.8.11.2
R: 3.0.3

Reports from trying other software/versions are most welcome
