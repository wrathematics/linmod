# - find Cobra library
# COBRA_INCLUDE_DIR - Where to find Cobra header files (directory)
# COBRA_LIBRARIES - Cobra libraries
# COBRA_LIBRARY_RELEASE - Where the release library is
# COBRA_LIBRARY_DEBUG - Where the debug library is
# COBRA_FOUND - Set to TRUE if we found everything (library, includes and executable)

# Copyright (c) 2014 Christian Heckendorf
#
# Redistribution and use is allowed according to the terms of the BSD license.
# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
#
# Generated by CModuler, a CMake Module Generator - http://gitorious.org/cmoduler

IF( COBRA_INCLUDE_DIR AND COBRA_LIBRARY_RELEASE AND COBRA_LIBRARY_DEBUG )
	SET(COBRA_FIND_QUIETLY TRUE)
ENDIF( COBRA_INCLUDE_DIR AND COBRA_LIBRARY_RELEASE AND COBRA_LIBRARY_DEBUG )

FIND_PATH( COBRA_INCLUDE_DIR cobra.h  )

FIND_LIBRARY(COBRA_LIBRARY_RELEASE NAMES cobra )

FIND_LIBRARY(COBRA_LIBRARY_DEBUG NAMES cobra cobrad  HINTS /usr/lib/debug/usr/lib/ )

IF( COBRA_LIBRARY_RELEASE OR COBRA_LIBRARY_DEBUG AND COBRA_INCLUDE_DIR )
	SET( COBRA_FOUND TRUE )
ENDIF( COBRA_LIBRARY_RELEASE OR COBRA_LIBRARY_DEBUG AND COBRA_INCLUDE_DIR )

IF( COBRA_LIBRARY_DEBUG AND COBRA_LIBRARY_RELEASE )
	# if the generator supports configuration types then set
	# optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value
	IF( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
		SET( COBRA_LIBRARIES optimized ${COBRA_LIBRARY_RELEASE} debug ${COBRA_LIBRARY_DEBUG} )
	ELSE( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
		# if there are no configuration types and CMAKE_BUILD_TYPE has no value
		# then just use the release libraries
		SET( COBRA_LIBRARIES ${COBRA_LIBRARY_RELEASE} )
	ENDIF( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
ELSEIF( COBRA_LIBRARY_RELEASE )
	SET( COBRA_LIBRARIES ${COBRA_LIBRARY_RELEASE} )
ELSE( COBRA_LIBRARY_DEBUG AND COBRA_LIBRARY_RELEASE )
	SET( COBRA_LIBRARIES ${COBRA_LIBRARY_DEBUG} )
ENDIF( COBRA_LIBRARY_DEBUG AND COBRA_LIBRARY_RELEASE )

IF( COBRA_FOUND )
	IF( NOT COBRA_FIND_QUIETLY )
		MESSAGE( STATUS "Found Cobra header file in ${COBRA_INCLUDE_DIR}")
		MESSAGE( STATUS "Found Cobra libraries: ${COBRA_LIBRARIES}")
	ENDIF( NOT COBRA_FIND_QUIETLY )
ELSE(COBRA_FOUND)
	IF( COBRA_FIND_REQUIRED)
		MESSAGE( FATAL_ERROR "Could not find Cobra" )
	ELSE( COBRA_FIND_REQUIRED)
		MESSAGE( STATUS "Optional package Cobra was not found" )
	ENDIF( COBRA_FIND_REQUIRED)
ENDIF(COBRA_FOUND)

